version: '3'

services:

  proxy:
    hostname: proxy
    container_name: proxy
    image: jwilder/nginx-proxy
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./proxy/vhost.d:/etc/nginx/vhost.d"
      - "./proxy/custom.conf:/etc/nginx/conf.d/custom.conf"
      - "/usr/share/nginx/html"
      - "./proxy/certs:/etc/nginx/certs:ro"
      - html:/usr/share/nginx/html
    networks:
      - frontend

  ssl:
    hostname: ssl
    container_name: ssl
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on: [proxy]
    volumes:
      - "./proxy/certs:/etc/nginx/certs:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./proxy/vhost.d:/etc/nginx/vhost.d"
      - html:/usr/share/nginx/html 
    networks:
      - frontend

  moodle:
    hostname: moodle
    container_name: moodle
    depends_on: [db]
    build:
      context: ./moodle
    environment:
      VIRTUAL_HOST: "${MOODLE_URL}"
      MOODLE_DB_HOST: "${MOODLE_DB_HOST}"
      MOODLE_DB_NAME: "${MOODLE_DB_NAME}"
      MOODLE_DB_TYPE: "${MOODLE_DB_TYPE}"
      MOODLE_DB_USER: '${MOODLE_MYSQL_USER}'
      MOODLE_DB_PASSWORD: "${MOODLE_MYSQL_PASSWORD}"
      MOODLE_ADMIN: "${MOODLE_ADMIN}"
      MOODLE_ADMIN_PASSWORD: "${MOODLE_ADMIN_PASSWORD}"
      MOODLE_URL: "${MOODLE_URL}"
    networks:
      - frontend
      - backend
    volumes:
      - "./moodle-root:/var/www/html"
      - "./moodle-data:/var/moodledata"
    # ports:
    #   - 80:80

  db:
    hostname: db
    container_name: db
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MOODLE_DB_NAME}"
      MYSQL_USER: '${MOODLE_MYSQL_USER}'
      MYSQL_PASSWORD: '${MOODLE_MYSQL_PASSWORD}'
    networks:
      - backend
    volumes:
      - ./bbdd:/var/lib/mysql
      - ./dump:/docker-entrypoint-initdb.d

  
  phpmyadmin:
    hostname: phpmyadmin
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      VIRTUAL_HOST: "${PHPMYADMIN_URL}"
    depends_on: [db]
    volumes:
      - /sessions
    networks:
      - frontend
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  html:
